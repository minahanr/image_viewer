{"version":3,"sources":["webpack://cornerstoneMath/webpack/universalModuleDefinition","webpack://cornerstoneMath/webpack/bootstrap","webpack://cornerstoneMath/./math.js","webpack://cornerstoneMath/./vector3.js","webpack://cornerstoneMath/./lineSegment.js","webpack://cornerstoneMath/./quaternion.js","webpack://cornerstoneMath/./rect.js","webpack://cornerstoneMath/./point.js","webpack://cornerstoneMath/./plane.js","webpack://cornerstoneMath/./matrix4.js","webpack://cornerstoneMath/./Line3.js","webpack://cornerstoneMath/./index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","clamp","x","a","b","degToRad","degrees","Math","PI","radToDeg","radians","sign","NaN","_quaternion","_math","v1","dot","min","max","quaternion","Vector3","y","z","this","constructor","set","setX","setY","setZ","setComponent","index","Error","getComponent","copy","v","add","w","undefined","console","warn","addVectors","addScalar","sub","subVectors","multiply","multiplyVectors","multiplyScalar","scalar","applyAxisAngle","axis","angle","_quaternion2","default","applyQuaternion","setFromAxisAngle","normalize","applyMatrix3","e","elements","applyMatrix4","applyProjection","q","qx","qy","qz","qw","ix","iy","iz","iw","transformDirection","divide","divideScalar","invScalar","clampScalar","minVal","maxVal","floor","ceil","round","roundToZero","negate","lengthSq","length","sqrt","lengthManhattan","abs","setLength","oldLength","lerp","alpha","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","distanceTo","distanceToSquared","dx","dy","dz","setFromMatrixPosition","setFromMatrixScale","sx","sy","sz","setFromMatrixColumn","matrix","offset","me","equals","fromArray","array","toArray","clone","sqr","dist2","lineSegment","distanceToPoint","point","l2","start","end","t","distanceToPointSquared","intersectLine","lineSegment1","lineSegment2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","intersectionPoint","x1","y1","x2","y2","x3","y3","x4","y4","num","parseFloat","Quaternion","halfAngle","sin","cos","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","_lineSegment","rectToPoints","rect","topLeft","left","top","bottomRight","width","height","minDistance","rectToLineSegments","forEach","segment","distance","_lineSegment2","getIntersectionRect","rect1","rect2","intersectRect","intersectLeftRight","intersectTopBottom","rect1Points","rect2Points","doesIntersect","subtract","lhs","rhs","from","to","distanceSquared","delta","pageToPoint","pageX","pageY","insideRect","findClosestPoint","sources","target","distances","source","push","indexOf","_vector","v2","Plane","constant","_vector2","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","plane","inverseNormalLength","distanceToSphere","sphere","center","radius","projectPoint","optionalTarget","orthoPoint","perpendicularMagnitude","isIntersectionLine","line","startSign","endSign","result","direction","denominator","intersectPlane","targetPlane","intersectionData","origin","h1","h2","n1dotn2","coplanarPoint","translate","Matrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","Float32Array","makeRotationFromQuaternion","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","multiplyMatrices","ae","be","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","getInverse","throwOnInvertible","det","msg","identity","applyToVector3Array","j","makeTranslation","makeScale","Line3","_classCallCheck","clampToLine","startP","startEnd","startEnd2","closestPointToPointParameter","da","db","dc","daCrossDb","dcCrossDb","isNaN","intersection","distanceSq","cornerstoneMath"],"mappings":"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","file":"cornerstoneMath.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstone-math\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstone-math\"] = factory();\n\telse\n\t\troot[\"cornerstoneMath\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","// Based on THREE.JS\nfunction clamp (x, a, b) {\n  return (x < a) ? a : ((x > b) ? b : x);\n}\n\nfunction degToRad (degrees) {\n  const degreeToRadiansFactor = Math.PI / 180;\n\n\n  return degrees * degreeToRadiansFactor;\n}\n\nfunction radToDeg (radians) {\n  const radianToDegreesFactor = 180 / Math.PI;\n\n\n  return radians * radianToDegreesFactor;\n}\n\n// Returns sign of number\nfunction sign (x) {\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\n\nexport {\n  clamp,\n  degToRad,\n  radToDeg,\n  sign\n};\n","import Quaternion from './quaternion.js';\nimport { clamp } from './math.js';\n\n// Based on THREE.JS\nconst Vector3 = function (x, y, z) {\n\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n\n};\n\nVector3.prototype = {\n\n  constructor: Vector3,\n\n  set (x, y, z) {\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n\n  },\n\n  setX (x) {\n\n    this.x = x;\n\n    return this;\n\n  },\n\n  setY (y) {\n\n    this.y = y;\n\n    return this;\n\n  },\n\n  setZ (z) {\n\n    this.z = z;\n\n    return this;\n\n  },\n\n  setComponent (index, value) {\n\n    switch (index) {\n\n    case 0: this.x = value; break;\n    case 1: this.y = value; break;\n    case 2: this.z = value; break;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  getComponent (index) {\n\n    switch (index) {\n\n    case 0: return this.x;\n    case 1: return this.y;\n    case 2: return this.z;\n    default: throw new Error(`index is out of range: ${index}`);\n\n    }\n\n  },\n\n  copy (v) {\n\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n\n  },\n\n  add (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\n      return this.addVectors(v, w);\n\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n\n  },\n\n  addScalar (s) {\n\n    this.x += s;\n    this.y += s;\n    this.z += s;\n\n    return this;\n\n  },\n\n  addVectors (a, b) {\n\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n\n  },\n\n  sub (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\n      return this.subVectors(v, w);\n\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n\n  },\n\n  subVectors (a, b) {\n\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n\n  },\n\n  multiply (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\n      return this.multiplyVectors(v, w);\n\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n\n    return this;\n\n  },\n\n  multiplyScalar (scalar) {\n\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n\n    return this;\n\n  },\n\n  multiplyVectors (a, b) {\n\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n\n  },\n\n\n  applyAxisAngle: (function () {\n\n    let quaternion;\n\n    return function (axis, angle) {\n\n      if (quaternion === undefined) {\n        quaternion = new Quaternion();\n      }\n\n      this.applyQuaternion(quaternion.setFromAxisAngle(axis.normalize(), angle));\n\n      return this;\n\n    };\n\n  })(),\n\n  applyMatrix3 (m) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n\n  },\n\n  applyMatrix4 (m) {\n\n    // Input: THREE.Matrix4 affine matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n\n  },\n\n  applyProjection (m) {\n\n    // Input: THREE.Matrix4 projection matrix\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n    const d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\n\n    return this;\n\n  },\n\n  applyQuaternion (q) {\n\n    const x = this.x;\n    const y = this.y;\n    const z = this.z;\n\n    const qx = q.x;\n    const qy = q.y;\n    const qz = q.z;\n    const qw = q.w;\n\n    // Calculate quat * vector\n\n    const ix = qw * x + qy * z - qz * y;\n    const iy = qw * y + qz * x - qx * z;\n    const iz = qw * z + qx * y - qy * x;\n    const iw = -qx * x - qy * y - qz * z;\n\n    // Calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return this;\n\n  },\n\n  transformDirection (m) {\n\n    // Input: THREE.Matrix4 affine matrix\n    // Vector interpreted as a direction\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    this.normalize();\n\n    return this;\n\n  },\n\n  divide (v) {\n\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n\n    return this;\n\n  },\n\n  divideScalar (scalar) {\n\n    if (scalar !== 0) {\n\n      const invScalar = 1 / scalar;\n\n      this.x *= invScalar;\n      this.y *= invScalar;\n      this.z *= invScalar;\n\n    } else {\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n\n    }\n\n    return this;\n\n  },\n\n  min (v) {\n\n    if (this.x > v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y > v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z > v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  max (v) {\n\n    if (this.x < v.x) {\n\n      this.x = v.x;\n\n    }\n\n    if (this.y < v.y) {\n\n      this.y = v.y;\n\n    }\n\n    if (this.z < v.z) {\n\n      this.z = v.z;\n\n    }\n\n    return this;\n\n  },\n\n  clamp (min, max) {\n\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    if (this.x < min.x) {\n\n      this.x = min.x;\n\n    } else if (this.x > max.x) {\n\n      this.x = max.x;\n\n    }\n\n    if (this.y < min.y) {\n\n      this.y = min.y;\n\n    } else if (this.y > max.y) {\n\n      this.y = max.y;\n\n    }\n\n    if (this.z < min.z) {\n\n      this.z = min.z;\n\n    } else if (this.z > max.z) {\n\n      this.z = max.z;\n\n    }\n\n    return this;\n\n  },\n\n  clampScalar: (function () {\n\n    let min, max;\n\n    return function (minVal, maxVal) {\n\n      if (min === undefined) {\n\n        min = new Vector3();\n        max = new Vector3();\n\n      }\n\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n\n      return this.clamp(min, max);\n\n    };\n\n  })(),\n\n  floor () {\n\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n\n    return this;\n\n  },\n\n  ceil () {\n\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n\n    return this;\n\n  },\n\n  round () {\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n\n    return this;\n\n  },\n\n  roundToZero () {\n\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\n\n    return this;\n\n  },\n\n  negate () {\n\n    return this.multiplyScalar(-1);\n\n  },\n\n  dot (v) {\n\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n\n  },\n\n  lengthSq () {\n\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n\n  },\n\n  length () {\n\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\n  },\n\n  lengthManhattan () {\n\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\n  },\n\n  normalize () {\n\n    return this.divideScalar(this.length());\n\n  },\n\n  setLength (l) {\n\n    const oldLength = this.length();\n\n    if (oldLength !== 0 && l !== oldLength) {\n\n      this.multiplyScalar(l / oldLength);\n    }\n\n    return this;\n\n  },\n\n  lerp (v, alpha) {\n\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n\n    return this;\n\n  },\n\n  cross (v, w) {\n\n    if (w !== undefined) {\n\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\n      return this.crossVectors(v, w);\n\n    }\n\n    let x = this.x,\n      y = this.y,\n      z = this.z;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n\n  },\n\n  crossVectors (a, b) {\n\n    let ax = a.x,\n      ay = a.y,\n      az = a.z;\n    let bx = b.x,\n      by = b.y,\n      bz = b.z;\n\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n\n    return this;\n\n  },\n\n  projectOnVector: (function () {\n\n    let v1, dot;\n\n    return function (vector) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(vector).normalize();\n\n      dot = this.dot(v1);\n\n      return this.copy(v1).multiplyScalar(dot);\n\n    };\n\n  })(),\n\n  projectOnPlane: (function () {\n\n    let v1;\n\n    return function (planeNormal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      v1.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(v1);\n\n    };\n\n  })(),\n\n  reflect: (function () {\n\n    // Reflect incident vector off plane orthogonal to normal\n    // Normal is assumed to have unit length\n\n    let v1;\n\n    return function (normal) {\n\n      if (v1 === undefined) {\n        v1 = new Vector3();\n      }\n\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\n    };\n\n  })(),\n\n  angleTo (v) {\n\n    const theta = this.dot(v) / (this.length() * v.length());\n\n    // Clamp, to handle numerical problems\n\n    return Math.acos(clamp(theta, -1, 1));\n\n  },\n\n  distanceTo (v) {\n\n    return Math.sqrt(this.distanceToSquared(v));\n\n  },\n\n  distanceToSquared (v) {\n\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n    const dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  },\n\n  setFromMatrixPosition (m) {\n\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n\n  },\n\n  setFromMatrixScale (m) {\n\n    const sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\n    const sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\n    const sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\n\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n\n    return this;\n  },\n\n  setFromMatrixColumn (index, matrix) {\n\n    const offset = index * 4;\n\n    const me = matrix.elements;\n\n    this.x = me[offset];\n    this.y = me[offset + 1];\n    this.z = me[offset + 2];\n\n    return this;\n\n  },\n\n  equals (v) {\n\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\n\n  },\n\n  fromArray (array) {\n\n    this.x = array[0];\n    this.y = array[1];\n    this.z = array[2];\n\n    return this;\n\n  },\n\n  toArray () {\n\n    return [this.x, this.y, this.z];\n\n  },\n\n  clone () {\n\n    return new Vector3(this.x, this.y, this.z);\n\n  }\n\n};\n\nexport default Vector3;\n","import { sign } from './math.js';\n\n// Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\nfunction sqr (x) {\n  return x * x;\n}\n\nfunction dist2 (v, w) {\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\n}\n\nfunction distanceToPointSquared (lineSegment, point) {\n  const l2 = dist2(lineSegment.start, lineSegment.end);\n\n  if(l2 === 0) {\n    return dist2(point, lineSegment.start);\n  }\n  const t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) +\n        (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\n\n  if(t < 0) {\n    return dist2(point, lineSegment.start);\n  }\n  if(t > 1) {\n    return dist2(point, lineSegment.end);\n  }\n\n  const pt = {\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\n  };\n\n\n  return dist2(point, pt);\n}\n\nfunction distanceToPoint (lineSegment, point) {\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\n}\n\n// Returns intersection points of two lines\nfunction intersectLine (lineSegment1, lineSegment2) {\n  const intersectionPoint = {};\n\n  let x1 = lineSegment1.start.x,\n    y1 = lineSegment1.start.y,\n    x2 = lineSegment1.end.x,\n    y2 = lineSegment1.end.y,\n    x3 = lineSegment2.start.x,\n    y3 = lineSegment2.start.y,\n    x4 = lineSegment2.end.x,\n    y4 = lineSegment2.end.y;\n\n  // Coefficients of line equations\n  let a1, a2, b1, b2, c1, c2;\n  // Sign values\n  let r1, r2, r3, r4;\n\n  // Intermediate values\n  let denom, num;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  r3 = a1 * x3 + b1 * y3 + c1;\n  r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n    * same side of line 1, the line segments do not intersect.\n    */\n\n  if (r3 !== 0 &&\n        r4 !== 0 &&\n        sign(r3) === sign(r4)) {\n    return;\n  }\n\n  // Compute a2, b2, c2\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4;\n\n  // Compute r1 and r2\n  r1 = a2 * x1 + b2 * y1 + c2;\n  r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n    * on same side of second line segment, the line segments do\n    * not intersect.\n    */\n\n  if (r1 !== 0 &&\n        r2 !== 0 &&\n        sign(r1) === sign(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n    */\n\n  denom = (a1 * b2) - (a2 * b1);\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n    * is added or subtracted to the numerator, depending upon the\n    * sign of the numerator.\n    */\n\n  num = (b1 * c2) - (b2 * c1);\n  const x = parseFloat(num / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  const y = parseFloat(num / denom);\n\n  intersectionPoint.x = x;\n  intersectionPoint.y = y;\n\n  return intersectionPoint;\n}\n\n// Module exports\nconst lineSegment = {\n  distanceToPoint,\n  intersectLine\n};\n\nexport default lineSegment;\n","const Quaternion = function Quaternion (x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = (w !== undefined) ? w : 1;\n};\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  let halfAngle = angle / 2,\n    s = Math.sin(halfAngle);\n\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(halfAngle);\n\n  return this;\n};\n\nQuaternion.prototype.multiplyQuaternions = function (a, b) {\n  let qax = a.x,\n    qay = a.y,\n    qaz = a.z,\n    qaw = a.w;\n  let qbx = b.x,\n    qby = b.y,\n    qbz = b.z,\n    qbw = b.w;\n\n  this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n  this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n  this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n  this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n  return this;\n};\n\nQuaternion.prototype.setFromRotationMatrix = function (m) {\n  let te = m.elements,\n\n    m11 = te[0],\n    m12 = te[4],\n    m13 = te[8],\n    m21 = te[1],\n    m22 = te[5],\n    m23 = te[9],\n    m31 = te[2],\n    m32 = te[6],\n    m33 = te[10],\n\n    trace = m11 + m22 + m33,\n    s;\n\n  if (trace > 0) {\n\n    s = 0.5 / Math.sqrt(trace + 1.0);\n\n    this.w = 0.25 / s;\n    this.x = (m32 - m23) * s;\n    this.y = (m13 - m31) * s;\n    this.z = (m21 - m12) * s;\n\n  } else if (m11 > m22 && m11 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n    this.w = (m32 - m23) / s;\n    this.x = 0.25 * s;\n    this.y = (m12 + m21) / s;\n    this.z = (m13 + m31) / s;\n\n  } else if (m22 > m33) {\n\n    s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n    this.w = (m13 - m31) / s;\n    this.x = (m12 + m21) / s;\n    this.y = 0.25 * s;\n    this.z = (m23 + m32) / s;\n\n  } else {\n\n    s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n    this.w = (m21 - m12) / s;\n    this.x = (m13 + m31) / s;\n    this.y = (m23 + m32) / s;\n    this.z = 0.25 * s;\n\n  }\n\n  return this;\n};\n\nexport default Quaternion;\n","import lineSegment from './lineSegment.js';\n\nfunction rectToLineSegments (rect) {\n  const top = {\n    start: {\n      x: rect.left,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top\n\n    }\n  };\n  const right = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top\n    },\n    end: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n\n    }\n  };\n  const bottom = {\n    start: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top + rect.height\n\n    }\n  };\n  const left = {\n    start: {\n      x: rect.left,\n      y: rect.top + rect.height\n    },\n    end: {\n      x: rect.left,\n      y: rect.top\n\n    }\n  };\n  const lineSegments = [top, right, bottom, left];\n\n\n  return lineSegments;\n}\n\nfunction distanceToPoint (rect, point) {\n  let minDistance = 655535;\n  const lineSegments = rectToLineSegments(rect);\n\n  lineSegments.forEach(function (segment) {\n    const distance = lineSegment.distanceToPoint(segment, point);\n\n    if(distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n\n// Returns top-left and bottom-right points of the rectangle\nfunction rectToPoints (rect) {\n  const rectPoints = {\n    topLeft: {\n      x: rect.left,\n      y: rect.top\n    },\n    bottomRight: {\n      x: rect.left + rect.width,\n      y: rect.top + rect.height\n    }\n  };\n\n  return rectPoints;\n}\n\n// Returns whether two non-rotated rectangles are intersected\nfunction doesIntersect (rect1, rect2) {\n  let intersectLeftRight;\n  let intersectTopBottom;\n\n  const rect1Points = rectToPoints(rect1);\n  const rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.topLeft.x));\n    } else {\n      intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.topLeft.x));\n    }\n  } else if (rect2.width >= 0) {\n    intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.bottomRight.x));\n  } else {\n    intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.bottomRight.x));\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.topLeft.y));\n    } else {\n      intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.bottomRight.y) || (rect2Points.topLeft.y <= rect1Points.topLeft.y));\n    }\n  } else if (rect2.height >= 0) {\n    intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.bottomRight.y));\n  } else {\n    intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.bottomRight.y) || (rect2Points.top <= rect1Points.bottomRight.y));\n  }\n\n  return intersectLeftRight && intersectTopBottom;\n}\n\n// Returns intersection points of two non-rotated rectangles\nfunction getIntersectionRect (rect1, rect2) {\n  const intersectRect = {\n    topLeft: {},\n    bottomRight: {}\n  };\n\n  if (!doesIntersect(rect1, rect2)) {\n    return;\n  }\n\n  const rect1Points = rectToPoints(rect1);\n  const rect2Points = rectToPoints(rect2);\n\n  if (rect1.width >= 0) {\n    if (rect2.width >= 0) {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n    } else {\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n    }\n  } else if (rect2.width >= 0) {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\n  } else {\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\n  }\n\n  if (rect1.height >= 0) {\n    if (rect2.height >= 0) {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n    } else {\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n    }\n  } else if (rect2.height >= 0) {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\n  } else {\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\n  }\n\n  // Returns top-left and bottom-right points of intersected rectangle\n  return intersectRect;\n\n}\n\nconst rect = {\n  distanceToPoint,\n  getIntersectionRect\n};\n\nexport default rect;\n","function pageToPoint (e) {\n  return {\n    x: e.pageX,\n    y: e.pageY\n  };\n}\n\nfunction subtract (lhs, rhs) {\n  return {\n    x: lhs.x - rhs.x,\n    y: lhs.y - rhs.y\n  };\n}\n\nfunction copy (point) {\n  return {\n    x: point.x,\n    y: point.y\n  };\n}\n\nfunction distance (from, to) {\n  return Math.sqrt(distanceSquared(from, to));\n}\n\nfunction distanceSquared (from, to) {\n  const delta = subtract(from, to);\n\n\n  return delta.x * delta.x + delta.y * delta.y;\n}\n\nfunction insideRect (point, rect) {\n  if(point.x < rect.left ||\n        point.x > rect.left + rect.width ||\n        point.y < rect.top ||\n        point.y > rect.top + rect.height) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns the closest source point to a target point\n * given an array of source points.\n *\n * @param sources An Array of source Points\n * @param target The target Point\n * @returns Point The closest point from the points array\n */\nfunction findClosestPoint (sources, target) {\n  const distances = [];\n  let minDistance;\n\n  sources.forEach(function (source, index) {\n    const d = distance(source, target);\n\n    distances.push(d);\n\n    if (index === 0) {\n      minDistance = d;\n    } else {\n      minDistance = Math.min(d, minDistance);\n    }\n  });\n\n  const index = distances.indexOf(minDistance);\n\n\n  return sources[index];\n}\n\nconst point = {\n  subtract,\n  copy,\n  pageToPoint,\n  distance,\n  distanceSquared,\n  insideRect,\n  findClosestPoint\n};\n\nexport default point;\n","import Vector3 from './vector3.js';\n\n// Copied from Three.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\nconst Plane = function (normal, constant) {\n\n  this.normal = (normal !== undefined) ? normal : new Vector3(1, 0, 0);\n  this.constant = (constant !== undefined) ? constant : 0;\n\n};\n\nPlane.prototype = {\n\n  constructor: Plane,\n\n  set (normal, constant) {\n\n    this.normal.copy(normal);\n    this.constant = constant;\n\n    return this;\n\n  },\n\n  setComponents (x, y, z, w) {\n\n    this.normal.set(x, y, z);\n    this.constant = w;\n\n    return this;\n\n  },\n\n  setFromNormalAndCoplanarPoint (normal, point) {\n\n    this.normal.copy(normal);\n    // Must be this.normal, not normal, as this.normal is normalized\n    this.constant = -point.dot(this.normal);\n\n    return this;\n\n  },\n\n  setFromCoplanarPoints: (function () {\n\n    const v1 = new Vector3();\n    const v2 = new Vector3();\n\n    return function (a, b, c) {\n\n      const normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\n\n      // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n\n      return this;\n\n    };\n\n  })(),\n\n\n  copy (plane) {\n\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n\n    return this;\n\n  },\n\n  normalize () {\n\n    // Note: will lead to a divide by zero if the plane is invalid.\n\n    const inverseNormalLength = 1.0 / this.normal.length();\n\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n\n    return this;\n\n  },\n\n  negate () {\n\n    this.constant *= -1;\n    this.normal.negate();\n\n    return this;\n\n  },\n\n  distanceToPoint (point) {\n\n    return this.normal.dot(point) + this.constant;\n\n  },\n\n  distanceToSphere (sphere) {\n\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n\n  },\n\n  projectPoint (point, optionalTarget) {\n\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\n\n  },\n\n  orthoPoint (point, optionalTarget) {\n\n    const perpendicularMagnitude = this.distanceToPoint(point);\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\n\n  },\n\n  isIntersectionLine (line) {\n\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    const startSign = this.distanceToPoint(line.start);\n    const endSign = this.distanceToPoint(line.end);\n\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\n\n  },\n\n  intersectLine: (function () {\n\n    const v1 = new Vector3();\n\n    return function (line, optionalTarget) {\n\n      const result = optionalTarget || new Vector3();\n\n      const direction = line.delta(v1);\n\n      const denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n\n        // Line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n\n          return result.copy(line.start);\n\n        }\n\n        // Unsure if this is the correct method to handle this case.\n        return undefined;\n\n      }\n\n      const t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n\n        return undefined;\n\n      }\n\n      return result.copy(direction).multiplyScalar(t).add(line.start);\n\n    };\n\n  })(),\n\n  intersectPlane (targetPlane) {\n    // Returns the intersection line between two planes\n    const direction = this.normal.clone().cross(targetPlane.normal);\n    const origin = new Vector3();\n    const intersectionData = {\n      origin,\n      direction\n    };\n\n    // If the planes are parallel, return an empty vector for the intersection line\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\n      intersectionData.direction = new Vector3();\n\n      return intersectionData;\n    }\n\n    const h1 = this.constant;\n    const h2 = targetPlane.constant;\n    const n1dotn2 = this.normal.clone().dot(targetPlane.normal);\n\n    const c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n    const c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\n\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\n\n    return intersectionData;\n  },\n\n  coplanarPoint (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.copy(this.normal).multiplyScalar(-this.constant);\n\n  },\n\n  translate (offset) {\n\n    this.constant = this.constant - offset.dot(this.normal);\n\n    return this;\n\n  },\n\n  equals (plane) {\n\n    return plane.normal.equals(this.normal) && (plane.constant === this.constant);\n\n  },\n\n  clone () {\n\n    return new Plane().copy(this);\n\n  }\n};\n\nexport default Plane;\n","import Vector3 from './vector3.js';\n\n// Based on THREE.JS\nconst Matrix4 = function Matrix4 (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n  this.elements = new Float32Array(16);\n\n  // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\n  // We should not support semi specification of Matrix4, it is just weird.\n\n  const te = this.elements;\n\n  te[0] = (n11 !== undefined) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\n  te[1] = n21 || 0; te[5] = (n22 !== undefined) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\n  te[2] = n31 || 0; te[6] = n32 || 0; te[10] = (n33 !== undefined) ? n33 : 1; te[14] = n34 || 0;\n  te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = (n44 !== undefined) ? n44 : 1;\n};\n\nMatrix4.prototype.makeRotationFromQuaternion = function (q) {\n  const te = this.elements;\n\n  let x = q.x,\n    y = q.y,\n    z = q.z,\n    w = q.w;\n  let x2 = x + x,\n    y2 = y + y,\n    z2 = z + z;\n  let xx = x * x2,\n    xy = x * y2,\n    xz = x * z2;\n  let yy = y * y2,\n    yz = y * z2,\n    zz = z * z2;\n  let wx = w * x2,\n    wy = w * y2,\n    wz = w * z2;\n\n  te[0] = 1 - (yy + zz);\n  te[4] = xy - wz;\n  te[8] = xz + wy;\n\n  te[1] = xy + wz;\n  te[5] = 1 - (xx + zz);\n  te[9] = yz - wx;\n\n  te[2] = xz - wy;\n  te[6] = yz + wx;\n  te[10] = 1 - (xx + yy);\n\n  // Last column\n  te[3] = 0;\n  te[7] = 0;\n  te[11] = 0;\n\n  // Bottom row\n  te[12] = 0;\n  te[13] = 0;\n  te[14] = 0;\n  te[15] = 1;\n\n  return this;\n};\n\nMatrix4.prototype.multiplyMatrices = function (a, b) {\n  const ae = a.elements;\n  const be = b.elements;\n  const te = this.elements;\n\n  let a11 = ae[0],\n    a12 = ae[4],\n    a13 = ae[8],\n    a14 = ae[12];\n  let a21 = ae[1],\n    a22 = ae[5],\n    a23 = ae[9],\n    a24 = ae[13];\n  let a31 = ae[2],\n    a32 = ae[6],\n    a33 = ae[10],\n    a34 = ae[14];\n  let a41 = ae[3],\n    a42 = ae[7],\n    a43 = ae[11],\n    a44 = ae[15];\n\n  let b11 = be[0],\n    b12 = be[4],\n    b13 = be[8],\n    b14 = be[12];\n  let b21 = be[1],\n    b22 = be[5],\n    b23 = be[9],\n    b24 = be[13];\n  let b31 = be[2],\n    b32 = be[6],\n    b33 = be[10],\n    b34 = be[14];\n  let b41 = be[3],\n    b42 = be[7],\n    b43 = be[11],\n    b44 = be[15];\n\n  te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n  te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n  te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n  te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n  te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n  te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n  te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n  te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n  te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n  te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n  te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n  te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n  te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n  te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n  te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n  te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n  return this;\n};\n\nMatrix4.prototype.multiply = function (m, n) {\n\n  if (n !== undefined) {\n\n    console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\n    return this.multiplyMatrices(m, n);\n  }\n\n  return this.multiplyMatrices(this, m);\n};\n\nMatrix4.prototype.getInverse = function (m, throwOnInvertible) {\n\n  // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n  const te = this.elements;\n  const me = m.elements;\n\n  let n11 = me[0],\n    n12 = me[4],\n    n13 = me[8],\n    n14 = me[12];\n  let n21 = me[1],\n    n22 = me[5],\n    n23 = me[9],\n    n24 = me[13];\n  let n31 = me[2],\n    n32 = me[6],\n    n33 = me[10],\n    n34 = me[14];\n  let n41 = me[3],\n    n42 = me[7],\n    n43 = me[11],\n    n44 = me[15];\n\n  te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\n  te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\n  te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\n  te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n  te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\n  te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\n  te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\n  te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\n  te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\n  te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\n  te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\n  te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\n  te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\n  te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\n  te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\n  te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\n\n  const det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n  if (det === 0) {\n\n    const msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\n\n    if (throwOnInvertible || false) {\n\n      throw new Error(msg);\n\n    } else {\n\n      console.warn(msg);\n\n    }\n\n    this.identity();\n\n    return this;\n  }\n\n  this.multiplyScalar(1 / det);\n\n  return this;\n\n};\n\nMatrix4.prototype.applyToVector3Array = function () {\n\n  const v1 = new Vector3();\n\n  return function (array, offset, length) {\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = array.length;\n    }\n\n    for (var i = 0, j = offset; i < length; i += 3, j += 3) {\n\n      v1.x = array[j];\n      v1.y = array[j + 1];\n      v1.z = array[j + 2];\n\n      v1.applyMatrix4(this);\n\n      array[j] = v1.x;\n      array[j + 1] = v1.y;\n      array[j + 2] = v1.z;\n\n    }\n\n    return array;\n\n  };\n\n};\n\nMatrix4.prototype.makeTranslation = function (x, y, z) {\n\n  this.set(\n    1, 0, 0, x,\n    0, 1, 0, y,\n    0, 0, 1, z,\n    0, 0, 0, 1\n  );\n\n  return this;\n\n};\nMatrix4.prototype.multiplyScalar = function (s) {\n\n  const te = this.elements;\n\n  te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\n  te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\n  te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\n  te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\n\n  return this;\n\n};\nMatrix4.prototype.set = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\n  const te = this.elements;\n\n  te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\n  te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\n  te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\n  te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\n\n  return this;\n\n};\n\nMatrix4.prototype.makeScale = function (x, y, z) {\n\n  this.set(\n    x, 0, 0, 0,\n    0, y, 0, 0,\n    0, 0, z, 0,\n    0, 0, 0, 1\n  );\n\n  return this;\n\n};\n\nexport default Matrix4;\n","import Vector3 from './vector3.js';\nimport { clamp } from './math.js';\n\n// Copied from THREE.JS\n/**\n * @author bhouston / http://exocortex.com\n */\n\n\nclass Line3 {\n  constructor (start, end) {\n\n    this.start = (start !== undefined) ? start : new Vector3();\n    this.end = (end !== undefined) ? end : new Vector3();\n\n  }\n\n  set (start, end) {\n\n    this.start.copy(start);\n    this.end.copy(end);\n\n    return this;\n\n  }\n\n  copy (line) {\n\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n\n    return this;\n\n  }\n\n  center (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\n\n  }\n\n  delta (optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n\n    return result.subVectors(this.end, this.start);\n\n  }\n\n  distanceSq () {\n\n    return this.start.distanceToSquared(this.end);\n\n  }\n\n  distance () {\n\n    return this.start.distanceTo(this.end);\n\n  }\n\n  at (t, optionalTarget) {\n\n    const result = optionalTarget || new Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  closestPointToPointParameter (point, clampToLine) {\n\n    const startP = new Vector3();\n    const startEnd = new Vector3();\n\n    startP.subVectors(point, this.start);\n    startEnd.subVectors(this.end, this.start);\n\n    const startEnd2 = startEnd.dot(startEnd);\n    const startEnd_startP = startEnd.dot(startP);\n\n    let t = startEnd_startP / startEnd2;\n\n    if (clampToLine) {\n      t = clamp(t, 0, 1);\n    }\n\n    return t;\n\n  }\n\n  closestPointToPoint (point, clampToLine, optionalTarget) {\n\n    const t = this.closestPointToPointParameter(point, clampToLine);\n\n    const result = optionalTarget || new Vector3();\n\n    return this.delta(result).multiplyScalar(t).add(this.start);\n\n  }\n\n  applyMatrix4 (matrix) {\n\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n\n    return this;\n\n  }\n\n  equals (line) {\n\n    return line.start.equals(this.start) && line.end.equals(this.end);\n\n  }\n\n  clone () {\n\n    return new Line3().copy(this);\n\n  }\n\n  intersectLine (line) {\n    // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\n    const da = this.end.clone().sub(this.start);\n    const db = line.end.clone().sub(line.start);\n    const dc = line.start.clone().sub(this.start);\n\n    const daCrossDb = da.clone().cross(db);\n    const dcCrossDb = dc.clone().cross(db);\n\n    // Lines are not coplanar, stop here\n    if (dc.dot(da) === 0) {\n      return;\n    }\n\n    const s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\n\n    // Make sure we have an intersection\n    if (s > 1.0 || isNaN(s)) {\n      return;\n    }\n\n    const intersection = this.start.clone().add(da.clone().multiplyScalar(s));\n    const distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\n\n    if (distanceTest <= line.distanceSq()) {\n      return intersection;\n    }\n\n    return;\n  }\n}\n\nexport default Line3;\n","import { default as Line3 } from './Line3.js';\nimport { default as lineSegment } from './lineSegment.js';\nimport { clamp,\n  degToRad,\n  radToDeg,\n  sign } from './math.js';\n\nimport { default as Matrix4 } from './matrix4.js';\nimport { default as Plane } from './plane.js';\nimport { default as point } from './point.js';\nimport { default as quaternion } from './quaternion.js';\nimport { default as rect } from './rect.js';\nimport { default as Vector3 } from './vector3.js';\n\nconst cornerstoneMath = {\n  Line3,\n  lineSegment,\n  clamp,\n  degToRad,\n  radToDeg,\n  sign,\n  Matrix4,\n  Plane,\n  point,\n  quaternion,\n  rect,\n  Vector3\n};\n\nexport {\n  Line3,\n  lineSegment,\n  clamp,\n  degToRad,\n  radToDeg,\n  sign,\n  Matrix4,\n  Plane,\n  point,\n  quaternion,\n  rect,\n  Vector3\n};\n\nexport default cornerstoneMath;\n"],"sourceRoot":""}